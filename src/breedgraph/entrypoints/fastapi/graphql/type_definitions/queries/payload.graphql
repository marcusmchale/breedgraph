enum QueryStatus {
    SUCCESS
    NOT_FOUND
    ERROR
}

type Error {
    name: String!
    message: String!
}

type BooleanPayload {
    status: QueryStatus!
    result: Boolean
    errors: [Error]
}

type LoginPayload {
    status: QueryStatus!
    result: Token
    errors: [Error]
}

type TeamsPayload {
    status: QueryStatus!
    result: [Team]
    errors: [Error]
}

type AffiliationsPayload {
    status: QueryStatus!
    result: Affiliations
    errors: [Error]
}

type TeamPayload {
    status: QueryStatus!
    result: Team
    errors: [Error]
}

type AccountPayload {
    status: QueryStatus!
    result: Account
    errors: [Error]
}

type UsersPayload {
    status: QueryStatus!
    result: [User]
    errors: [Error]
}

type VersionPayload {
    status: QueryStatus!
    result: Version
    errors: [Error]
}

type OntologyEntryPayload {
    status: QueryStatus!
    result: OntologyEntry
    errors: [Error]
}

type OntologyEntriesPayload {
    status: QueryStatus!
    result: [OntologyEntry]
    errors: [Error]
}

type LocationsPayload {
    status: QueryStatus!
    result: [Location]
    errors: [Error]
}

type LocationPayload {
    status: QueryStatus!
    result: Location
    errors: [Error]
}

type LayoutsPayload {
    status: QueryStatus!
    result: [Layout]
    errors: [Error]
}

type LayoutPayload {
    status: QueryStatus!
    result: Layout
    errors: [Error]
}

type UnitsPayload {
    status: QueryStatus!
    result: [Unit]
    errors: [Error]
}

type UnitPayload {
    status: QueryStatus!
    result: Unit
    errors: [Error]
}

type DatasetsPayload {
    status: QueryStatus!
    result: [DataSet]
    errors: [Error]
}