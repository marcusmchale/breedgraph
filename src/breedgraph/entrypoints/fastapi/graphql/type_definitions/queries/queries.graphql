type Query {
    """Get own account details for administrative tasks"""
    accountsAccount: AccountPayload!
    """Get user details for administrative tasks"""
    accountsUsers (userId: Int): UsersPayload! # see users for admin
    """
    Get the user access map of access type to team
    """
    accountsUserAccess: UserAccessPayload!
    """
    Get a list of organisation "root" teams.
    These are top-level team in the organisation hierarchy.
    Visibility of teams within an organisation is dependent on controls, read-release and affiliations.
    Navigation of the organisation graph is achieved by resolvers on the parent/children attributes.
    """
    organisations: TeamsPayload!
    """
    Get a single team details
    As with organisations, the organisation can be explored from this node.
    """
    organisationsTeam (teamId: Int!): TeamPayload! # see team
    """
    Get a multiple team details
    """
    organisationsTeams(teamIds: [Int!]): TeamsPayload! # see team
    """Get the latest ontology version"""
    ontologyVersion: VersionPayload!
    """Get an ontology entry"""
    ontologyEntry(entryId: Int!): OntologyEntryPayload!
    """Get an ontology commit history"""
    ontologyCommitHistory(limit: Int): OntologyCommitsPayload!
    """Get a list of ontology entries"""
    ontologyEntries (entryIds: [Int], names: [String], labels: [OntologyEntryLabel], phases: [LifecyclePhase], versionId: Int): OntologyEntriesPayload!
    """Get a list of ontology relationships"""
    ontologyRelationships(entryIds: [Int], labels: [OntologyRelationshipLabel], phases: [LifecyclePhase], versionId: Int): OntologyRelationshipsPayload!
    """Get a list of countries for use in top level region creation"""
    regionsCountries: LocationsPayload!
    """Get a list of region "root" locations.
    These are all countries that form the top-level location in the region.
    """
    regions: LocationsPayload!
    """
    Get a single location details
    """
    regionsLocation (locationId: Int!): LocationPayload! # see team
    """
    Search for locations by ontology Location type
    """
    regionsLocations (locationTypeId: Int!): LocationsPayload!
    """Get a list of arrangement roots.
    These are all layouts that form the top-level layout in an arrangement.
    Optionally retrieve only those at a given location by supplying locationId.
    """
    arrangements (locationId: Int): LayoutsPayload!
    """
    Get a single layout details
    """
    arrangementsLayout (layoutId: Int!): LayoutPayload! # see team
    """
    Get a list of block "root" units.
    These are top-level unit in the block hierarchy.
    """
    blocks (locationId: Int): UnitsPayload!
    """
    Get a single unit.
    """
    blocksUnit (unitId: Int!): UnitPayload!
    """
    Get a list of programs
    """
    programs (programId: Int, trialId: Int, studyId: Int) : ProgramsPayload
    datasets (datasetId: Int, conceptId: Int): DatasetsPayload
    controlsControllers (entityLabel: ControlledModelLabel!, entityIds: [Int]!): ControllersPayload!
}
