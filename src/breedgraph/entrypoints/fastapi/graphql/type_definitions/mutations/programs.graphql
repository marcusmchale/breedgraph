# Program Mutations
input CreateProgramInput {
    name: String!
    fullname: String
    description: String
    contactIds: [Int!] = []
    referenceIds: [Int!] = []
}

input UpdateProgramInput {
    programId: Int!
    name: String
    fullname: String
    description: String
    contactIds: [Int!]
    referenceIds: [Int!]
}

# Trial Mutations
input CreateTrialInput {
    programId: Int!
    name: String!
    fullname: String
    description: String
    start: DateTime
    end: DateTime
    contactIds: [Int!] = []
    referenceIds: [Int!] = []
}

input UpdateTrialInput {
    trialId: Int!
    name: String
    fullname: String
    description: String
    start: DateTime
    end: DateTime
    contactIds: [Int!]
    referenceIds: [Int!]
}

# Study Mutations
input CreateStudyInput {
    trialId: Int!
    name: String!
    fullname: String
    description: String
    practices: String
    start: DateTime
    end: DateTime
    datasetIds: [Int!] = []
    designId: Int
    licenceId: Int
    referenceIds: [Int!] = []
}

input UpdateStudyInput {
    studyId: Int!
    name: String
    fullname: String
    description: String
    practices: String
    start: DateTime
    end: DateTime
    datasetIds: [Int!]
    designId: Int
    licenceId: Int
    referenceIds: [Int!]
}

# Mutation type extensions for programs
extend type Mutation {
    # Program mutations
    programsCreateProgram(program: CreateProgramInput!): BooleanPayload
    programsUpdateProgram(program: UpdateProgramInput!): BooleanPayload
    programsDeleteProgram(programId: Int!): BooleanPayload

    # Trial mutations
    programsCreateTrial(trial: CreateTrialInput!): BooleanPayload
    programsUpdateTrial(trial: UpdateTrialInput!): BooleanPayload
    programsDeleteTrial(trialId: Int!): BooleanPayload

    # Study mutations
    programsCreateStudy(study: CreateStudyInput!): BooleanPayload
    programsUpdateStudy(study: UpdateStudyInput!): BooleanPayload
    programsDeleteStudy(studyId: Int!): BooleanPayload
}